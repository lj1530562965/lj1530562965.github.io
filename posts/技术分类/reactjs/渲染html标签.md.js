webpackJsonp([32],{500:function(n,s){n.exports={content:["article",["h2","\u6e32\u67d3html\u6807\u7b7e"],["pre",{lang:null,highlighted:'This is a button<span class="token punctuation">:</span>\n\nimport { Button } from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>Primary<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button<span class="token operator">></span><span class="token keyword">Default</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"dashed"</span><span class="token operator">></span>Dashed<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"danger"</span><span class="token operator">></span>Danger<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"link"</span><span class="token operator">></span>Link<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nimport React<span class="token punctuation">,</span> {PureComponent} from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nexport <span class="token keyword">default</span> class Docs extends PureComponent {\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> {\n    <span class="token function">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span>state<span class="token operator">=</span>{\n        data<span class="token punctuation">:</span> props<span class="token punctuation">.</span>data\n    }\n  }\n  <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> {\n    data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  }\n\n  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> {\n\n  }\n  <span class="token function">UNSAFE_componentWillReceiveProps</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextProps<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span> !<span class="token operator">==</span> this<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> {\n        this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{\n            <span class="token string">"data"</span><span class="token punctuation">:</span> nextProps<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n}\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n        let {data} <span class="token operator">=</span> this<span class="token punctuation">.</span>state<span class="token comment" spellcheck="true">;</span>\n        return <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>div className<span class="token operator">=</span>{styles<span class="token punctuation">[</span><span class="token string">"docs"</span><span class="token punctuation">]</span>} dangerouslySetInnerHTML <span class="token operator">=</span> {{ __html<span class="token punctuation">:</span>data }}<span class="token operator">></span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n            <span class="token punctuation">)</span>\n    }\n}'},["code",'This is a button:\n\nimport { Button } from \'antd\';\n\nReactDOM.render(\n  <div>\n    <Button type="primary">Primary</Button>\n    <Button>Default</Button>\n    <Button type="dashed">Dashed</Button>\n    <Button type="danger">Danger</Button>\n    <Button type="link">Link</Button>\n  </div>,\n  mountNode,\n);\nimport React, {PureComponent} from \'react\';\nexport default class Docs extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state={\n        data: props.data\n    }\n  }\n  static defaultProps = {\n    data: [],\n  }\n\n  static propTypes = {\n\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps["data"] !== this.props["data"]) {\n        this.setState({\n            "data": nextProps["data"]\n        });\n    }\n}\n    render() {\n        let {data} = this.state;\n        return (\n            <div className={styles["docs"]} dangerouslySetInnerHTML = {{ __html:data }}>\n            </div>\n            )\n    }\n}']]],meta:{title:"\u6e32\u67d3html\u6807\u7b7e",publishDate:"2019-07-11T00:00:00.000Z",abstract:"\u6e32\u67d3html\u6807\u7b7e",filename:"posts/\u6280\u672f\u5206\u7c7b/reactjs/\u6e32\u67d3html\u6807\u7b7e.md"}}}});